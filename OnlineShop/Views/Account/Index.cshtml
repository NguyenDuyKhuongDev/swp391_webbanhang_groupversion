@model OnlineShop.Models.UserProfileViewModel
@{
    ViewData["Title"] = "Personal Info";
}

<div class="parent">
    <!-- Sidebar -->
    <div class="div5">
        <div class="user-profile-summary">
            <div class="info-item avatar-container">
                <span class="info-value avatar-wrapper">
                    <img src="@(string.IsNullOrEmpty(Model?.Avatar) ? "/images/default-avatar.jpg" : Model.Avatar)"
                         alt="Avatar" class="user-avatar rounded-circle" />
                </span>
            </div>
            <div class="user-name">@Model?.Email</div>
            <div class="last-login">Login at: @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</div>
        </div>

        <h3 class="menu-title">Personal Info</h3>
        <div class="sidebar-menu">
            <div class="menu-item active">Personal Info</div>
            <a asp-action="UpdateProfile" class="menu-item">Update Profile</a>
        </div>
    </div>

    <!-- Main Content - Profile Info -->
    <div class="div6">
        <h2 class="form-title">Personal Information</h2>

        @if (TempData["StatusMessage"] != null)
        {
            <div id="statusMessage" class="alert alert-success">
                @TempData["StatusMessage"]
                <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="profile-info">
            <div class="info-section">
                <h3>Basic Information</h3>
                <div class="info-item">
                    <span class="info-label">Full Name:</span>
                    <span class="info-value">@(string.IsNullOrEmpty(Model?.FullName) ? "Not updated" : Model.FullName)</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Email:</span>
                    <span class="info-value">@Model?.Email</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Phone Number:</span>
                    <span class="info-value">@(string.IsNullOrEmpty(Model?.PhoneNumber) ? "Not updated" : Model.PhoneNumber)</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Gender:</span>
                    <span class="info-value">@(Model == null || !Model.Gender.HasValue ? "Not updated" : (Model.Gender.Value ? "Male" : "Female"))</span>
                </div>
            </div>

            <div class="info-section">
                <h3>Address</h3>
                @if (string.IsNullOrEmpty(Model?.Province) || string.IsNullOrEmpty(Model?.AddressDetail))
                {
                    <p>Address not updated</p>
                }
                else
                {
                    <div class="info-item">
                        <span class="info-label">Full Address:</span>
                        <span class="info-value">@Model.AddressDetail, @Model.Ward, @Model.District, @Model.Province</span>
                    </div>
                }
            </div>

            <div class="actions">
                <a asp-action="UpdateProfile" class="btn btn-primary">Update Information</a>
            </div>
        </div>
    </div>
</div>

<style>
    /* CSS cho layout chung */
    .parent {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(5, 1fr);
        gap: 8px;
        height: 100vh;
        padding: 10px;
    }

    .div5 {
        grid-row: span 5 / span 5;
        background-color: #e8eef7;
        padding: 15px;
        border-radius: 5px;
    }

    .div6 {
        grid-column: span 4 / span 4;
        grid-row: span 5 / span 5;
        background-color: white;
        border-radius: 5px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        overflow-y: auto;
    }

    /* User profile summary */
    .user-profile-summary {
        margin-bottom: 25px;
        text-align: center;
    }

    .user-avatar-large {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-color: #4a6fa5;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 32px;
        font-weight: bold;
        margin: 0 auto 10px;
    }

    .user-name {
        font-weight: bold;
        font-size: 16px;
    }

    .last-login {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
    }

    /* Sidebar menu */
    .menu-title {
        font-size: 18px;
        margin-bottom: 15px;
        color: #4a6fa5;
    }

    .sidebar-menu {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .menu-item {
        padding: 12px 15px;
        background-color: white;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
        text-decoration: none;
        color: inherit;
        display: block;
    }

        .menu-item:hover {
            background-color: #d6e0f0;
        }

        .menu-item.active {
            background-color: #4a6fa5;
            color: white;
        }

    /* Form styling */
    .form-title {
        margin-bottom: 20px;
        color: #4a6fa5;
        font-size: 24px;
    }

    /* Profile Info Styling */
    .profile-info {
        margin-top: 20px;
    }

    .info-section {
        margin-bottom: 25px;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
        border: 1px solid #e0e0e0;
    }

        .info-section h3 {
            margin-bottom: 15px;
            color: #4a6fa5;
            font-size: 18px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

    .info-item {
        margin-bottom: 10px;
        display: flex;
    }

    .info-label {
        min-width: 150px;
        font-weight: bold;
    }

    .actions {
        margin-top: 20px;
    }

    .avatar-container {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

        .avatar-container .info-label {
            width: 150px;
            font-weight: bold;
        }

        .avatar-container .info-value {
            display: flex;
            justify-content: flex-end; /* Căn phải */
            flex-grow: 1;
            padding-right: 50px;
        }

    .user-avatar {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 50%;
        border: 2px solid #eee;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
</style>
@section Scripts {
    <script src="~/js/messageAutoHide.js" asp-append-version="true"></script>
}