@model OnlineShop.Models.Product
@using System.Text.Encodings.Web

@{
    ViewData["Title"] = "Thêm Sản Phẩm";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/productAdd.css" asp-append-version="true" />
}

<div class="container mt-4">
    <div>
        <div id="notification" class="notification"></div>
    </div>
    <!-- Nút Quay Lại -->
    <div class="mb-4">
        <a asp-controller="Product" asp-action="ProductView" class="btn btn-warning">Quay Lại Danh Sách</a>
    </div>
    <h2 class="text-center mb-4">Thêm Sản Phẩm</h2>

    <form asp-controller="Product" asp-action="HandleAddProduct" method="post" enctype="multipart/form-data">
        <!-- Tên Sản Phẩm -->
        <div class="form-group">
            <label for="ProductName">Tên Sản Phẩm</label>
            <input asp-for="ProductName" class="form-control" id="ProductName" required />
            <span asp-validation-for="ProductName" class="text-danger"></span>
        </div>

        <!-- Danh Mục -->
        <div class="form-group">
            <label for="CategoryProductId">Danh Mục</label>
            <select asp-for="CategoryProductId" class="form-control" required>
                <option value="">-- Chọn Danh Mục --</option>
                @if (ViewBag.Categories != null)
                {
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.CategoryProductID">@category.CategoryProductName</option>
                    }
                }
                else
                {
                    <option value="" disabled>Không có danh mục</option>
                }
            </select>
            <span asp-validation-for="CategoryProductId" class="text-danger"></span>
        </div>

        <!-- Mô Tả -->
        <div class="form-group">
            <label for="ProductDescription">Mô Tả</label>
            <textarea asp-for="ProductDescription" class="form-control" id="ProductDescription" rows="3" required></textarea>
            <span asp-validation-for="ProductDescription" class="text-danger"></span>
        </div>

        <!-- Giá Bán -->
        <div class="form-group">
            <label for="ProductPrice">Giá Bán (VNĐ)</label>
            <input asp-for="ProductPrice" type="number"  class="form-control" id="ProductPrice" required />
            <span asp-validation-for="ProductPrice" class="text-danger"></span>
        </div>


        <!-- Kích Thước và Số Lượng Theo Kích Thước -->
        <div class="form-group">
            <label>Kích Thước và Số Lượng</label>
            <div class="d-flex flex-wrap">
                @foreach (var size in ViewBag.Sizes)
                {
                    <div class="size-quantity-wrapper mx-2">
                        <div class="form-check">
                            <input type="checkbox" name="SelectedSizes" value="@size.CategorySizeID" class="form-check-input size-checkbox" id="size-@size.CategorySizeID" />
                            <label class="form-check-label" for="size-@size.CategorySizeID">@size.CategorySizeName</label>
                        </div>
                        <input type="number" name="SizeQuantities[@size.CategorySizeID]" class="form-control size-quantity-input" min="0" placeholder="Số lượng" disabled />
                    </div>
                }
            </div>
            <span class="text-danger" id="size-error"></span>
            <span class="text-danger" id="quantity-error"></span>
        </div>

        <!-- Upload Hình Ảnh -->
        <div class="form-group">
            <label for="ProductImageFile">Tải Lên Hình Ảnh</label>
            <input type="file" name="ProductImageFile" class="form-control-file" accept=".jpg,.jpeg,.png,.gif,.webp" required />
        </div>
            <span class="text-danger" id="file-error"></span>



        <!-- Nút Submit -->
        <div class="form-group text-center">
            <button type="submit" class="btn btn-outline-primary">Thêm Sản Phẩm</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Kiểm tra nếu có thông báo từ Controller
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    showNotification('@JavaScriptEncoder.Default.Encode(TempData["SuccessMessage"].ToString())', 'success');
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    showNotification('@JavaScriptEncoder.Default.Encode(TempData["ErrorMessage"].ToString())', 'error');
            </text>
        }

        // Hàm để hiển thị thông báo
        function showNotification(message, type) {
            var notification = document.getElementById("notification");
            notification.innerText = message;
            notification.classList.add(type); // Thêm class success hoặc error để đổi màu

            // Hiển thị notification
            notification.style.display = 'block';

            // Ẩn notification sau 2s
            setTimeout(function () {
                notification.style.display = 'none';
            }, 2000);
        }

        // Enable/disable ô nhập số lượng dựa trên checkbox
        document.querySelectorAll('.size-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const quantityInput = this.parentElement.nextElementSibling;
                quantityInput.disabled = !this.checked;
                if (!this.checked) {
                    quantityInput.value = '';
                }
            });
        });

        // Client-side validation cho kích thước
                document.querySelector('form').addEventListener('submit', function (e) {
            const selectedSizes = document.querySelectorAll('input[name="SelectedSizes"]:checked');
            const sizeError = document.getElementById('size-error');
            const quantityError = document.getElementById('quantity-error');
            const fileError = document.getElementById('file-error');
            const productImageFile = document.querySelector('input[name="ProductImageFile"]').files.length;
   
            let isValid = true;

            // Kiểm tra kích thước
            if (selectedSizes.length === 0) {
                sizeError.textContent = 'Vui lòng chọn ít nhất một kích thước.';
                isValid = false;
            } else {
                sizeError.textContent = '';
            }

            // Kiểm tra số lượng cho các kích thước được chọn
            let quantityValid = true;
            selectedSizes.forEach(size => {
                const sizeId = size.value;
                const quantityInput = document.querySelector(`input[name="SizeQuantities[${sizeId}]"]`);
                const quantityValue = quantityInput.value;

                if (!quantityValue || quantityValue < 0) {
                    quantityError.textContent = 'Vui lòng nhập số lượng ≥ 0 cho kích thước ' + size.nextElementSibling.textContent + '.';
                    quantityValid = false;
                    isValid = false;
                }
            });

            if (quantityValid) {
                quantityError.textContent = '';
            }

            // Kiểm tra hình ảnh
            if (productImageFile === 0) {
                fileError.textContent = 'Vui lòng tải lên hình ảnh sản phẩm.';
                isValid = false;
            } else {
                fileError.textContent = '';
            }

            if (!isValid) {
                e.preventDefault(); // Ngăn không cho submit nếu có lỗi
            }
        });
    </script>
}