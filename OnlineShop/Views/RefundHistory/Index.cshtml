@using OnlineShop.Models

@model Tuple<List<RefundHistory>, RefundHistoryFilterModel>

@{
    ViewData["Title"] = "Lịch sử hoàn tiền";
    var (refunds, filter) = Model;
}

<div class="container my-4">
    <h2>Lịch sử hoàn tiền</h2>

    <!-- Filter Form -->
    <form method="get" class="mb-4">
        <div class="row g-3">
            <div class="col-md-3">
                <input type="text" class="form-control" name="OrderId" value="@filter.OrderId" placeholder="Mã đơn hàng">
            </div>
            
            <div class="col-md-3">
                <input type="date" class="form-control" name="FromDate" value="@filter.FromDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-3">
                <input type="date" class="form-control" name="ToDate" value="@filter.ToDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Lọc</button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">Xóa bộ lọc</a>
            </div>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Ngày yêu cầu</th>
                    <th>Mã hoàn tiền</th>
                    <th>Mã đơn hàng</th>
                    <th>Số tiền</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var refund in refunds)
                {
                    <tr>
                        <td>@refund.RefundDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>#@refund.RefundId</td>
                        <td>@refund.OrderId</td>
                        <td>@refund.RefundAmount.ToString("C")</td>
                        <td>
                            <span class="badge bg-@(refund.RefundStatus switch {
                                "Pending" => "warning",
                                "Approved" => "success",
                                "Rejected" => "danger",
                                _ => "secondary"
                            })">@refund.RefundStatus</span>
                        </td>
                        <td>
                            <a href="@Url.Action("Details", new { id = refund.RefundId })" 
                               class="btn btn-sm btn-primary">
                                <i class="bi bi-eye"></i> Chi tiết
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (filter.TotalItems > filter.PageSize)
    {
        <nav>
            <ul class="pagination">
                @for (int i = 1; i <= (filter.TotalItems + filter.PageSize - 1) / filter.PageSize; i++)
                {
                    <li class="page-item @(i == filter.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { PageNumber = i })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>